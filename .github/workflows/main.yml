name: Deploy

on:
  push:
    branches:
      - master
      - dev

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: 🚀 Start Deployment
        run: echo "Starting deployment process...."

      - uses: actions/checkout@v3

      - name: 🔹 Set Deployment Info Based on Branch
        run: |
          echo "Deploying branch: ${{ github.ref_name }}"
          if [ "${{ github.ref_name }}" == "master" ]; then
            echo "DEPLOY_HOST=${{ secrets.SSH_HOST }}" >> $GITHUB_ENV
            echo "DEPLOY_USER=${{ secrets.SSH_USER }}" >> $GITHUB_ENV
            echo "DEPLOY_PATH=/home/wwwdavyp/api.davypay.com" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "dev" ]; then
            echo "DEPLOY_HOST=${{ secrets.SSH_HOST }}" >> $GITHUB_ENV
            echo "DEPLOY_USER=${{ secrets.SSH_USER }}" >> $GITHUB_ENV
            echo "DEPLOY_PATH=/home/wwwdavyp/prod.davypay.com" >> $GITHUB_ENV
          else
            echo "❌ Unknown branch. Skipping deployment."
            exit 1
          fi

      - name: 🕵️‍♂️ Check if Migration Files Changed
        id: migration-check
        run: |
          git fetch origin ${{ github.ref_name }}
          if git diff --name-only HEAD^ HEAD | grep -qE '^database/migrations/'; then
            echo "MIGRATION_CHANGED=true" >> $GITHUB_ENV
          else
            echo "MIGRATION_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: 📦 Upload Files via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "."                # Local folder to copy
          target: ${{ env.DEPLOY_PATH }}  # Remote path

      - name: 🔧 Run Post-deploy Commands on Server (with optional migrations)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd ${{ env.DEPLOY_PATH }}
            php artisan config:cache
            php artisan view:cache

            if [ "${{ env.MIGRATION_CHANGED }}" = "true" ]; then
              echo "🚨 Migration files changed — running migrations..."
              php artisan migrate --force
            else
              echo "✅ No migration changes detected. Skipping migrations."
            fi

      - name: ✅ Done
        run: echo "Deployment to '${{ github.ref_name }}' completed successfully."
